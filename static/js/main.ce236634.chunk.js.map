{"version":3,"sources":["components/Todo.js","components/TodoLists.js","App.js","index.js"],"names":["ButtonStyled","styled","Button","_templateObject","Object","taggedTemplateLiteral","label","inputProps","aria-label","Todo","_ref","todo","react_default","a","createElement","variant","fullWidth","startIcon","Checkbox","assign","sx","color","green","name","TodoLists","todoList","map","key","id","TODO_APP_STORAGE_KEY","App","_useState","useState","_useState2","slicedToArray","setTodoList","_useState3","_useState4","textInput","setTextInput","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","onTextInputChange","useCallback","e","target","value","FormControl","OutlinedInput","placeholder","onChange","filled","useFormControl","onAddButtonClick","v4","isCompleted","concat","toConsumableArray","addButton","React","useMemo","endIcon","Send_default","onClick","className","css","App_templateObject","components_TodoLists","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"8RAKMA,EAAeC,YAAOC,IAAPD,CAAHE,MAAAC,OAAAC,EAAA,EAAAD,CAAA,wDAIZE,EAAQ,CAAEC,WAAY,CAAEC,aAAc,kBAE7B,SAASC,EAATC,GAAsB,IAAPC,EAAOD,EAAPC,KAC5B,OAAOC,EAAAC,EAAAC,cAACd,EAAD,CACGe,QAAQ,WACRC,WAAS,EACTC,UAAWL,EAAAC,EAAAC,cAACI,EAAA,EAADd,OAAAe,OAAA,GAAcb,EAAd,CAAqBc,GAAI,CAAEC,MAAOC,IAAM,UAElDX,EAAKY,MCHHC,QAVf,SAAAd,GAAiC,IAAZe,EAAYf,EAAZe,SACnB,OACEb,EAAAC,EAAAC,cAAA,WACGW,EAASC,IAAI,SAACf,GAAD,OACZC,EAAAC,EAAAC,cAACL,EAAD,CAAMkB,IAAKhB,EAAKiB,GAAIjB,KAAMA,mECE5BkB,EAAuB,WAkDdC,MAhDf,WAAe,IAAAC,EACkBC,mBAAS,IAD3BC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA2B,EAAA,GACNN,EADMQ,EAAA,GACGE,EADHF,EAAA,GAAAG,EAEoBJ,mBAAS,IAF7BK,EAAAjC,OAAA8B,EAAA,EAAA9B,CAAAgC,EAAA,GAENE,EAFMD,EAAA,GAEIE,EAFJF,EAAA,GAIbG,oBAAU,WACJC,aAAaC,QAAQb,IACvBM,EAAYQ,KAAKC,MAAMH,aAAaC,QAAQb,MAE9C,IAEFW,oBAAU,WACRC,aAAaI,QAAQhB,EAAsBc,KAAKG,UAAUrB,KACzD,CAACA,IAkBJ,IAAMsB,EAAoBC,sBAAY,SAACC,GACrCV,EAAaU,EAAEC,OAAOC,QACtB,IACF,OACEvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEC,YAAY,wCACZH,MAAOb,EACPiB,SAAUR,IAEZnC,EAAAC,EAAAC,cA5BN,WAAuB,IACb0C,GAAWC,eAAoB,IAA/BD,OAEFE,EAAmBV,sBAAY,SAACC,GACpCd,EAAW,CAAE,CAAEP,GAAI+B,cAAMpC,KAAMe,EAAWsB,aAAa,IAA5CC,OAAAzD,OAAA0D,EAAA,EAAA1D,CAAsDqB,KACjEc,EAAa,KACb,CAACD,EAAWb,IAERsC,EAAYC,IAAMC,QAAQ,WAC9B,GAAGT,EACD,OAAO5C,EAAAC,EAAAC,cAACZ,EAAA,EAAD,CAAQa,QAAQ,YAAYmD,QAAStD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,MAAcQ,MAAM,UAAU+C,QAAWV,GAA9E,SAER,CAACF,IACJ,OAAO5C,EAAAC,EAAAC,cAAA,OAAKuD,UAAWC,YAAFC,MAAAnE,OAAAC,EAAA,EAAAD,CAAA,6GAA8G2D,IAe/H,OAEFnD,EAAAC,EAAAC,cAAC0D,EAAD,CAAW/C,SAAUA,MCnDdgD,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjE,EAAAC,EAAAC,cAACF,EAAAC,EAAMiE,WAAP,KACElE,EAAAC,EAAAC,cAACiE,EAAD","file":"static/js/main.ce236634.chunk.js","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport styled from '@emotion/styled';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nconst ButtonStyled = styled(Button)`\r\n  margin-top: 5px;\r\n  justify-content: left;\r\n`;\r\nconst label = { inputProps: { 'aria-label': 'Checkbox demo' } };\r\n\r\nexport default function Todo({todo}) {\r\n  return <ButtonStyled \r\n            variant=\"outlined\" \r\n            fullWidth \r\n            startIcon={<Checkbox {...label} sx={{ color: green[800],}}/>}\r\n          >\r\n            {todo.name}\r\n          </ButtonStyled>;\r\n};\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\n\r\nfunction TodoLists({ todoList }) {\r\n  return (\r\n    <div>\r\n      {todoList.map((todo) => (\r\n        <Todo key={todo.id} todo={todo}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoLists","import React, { useCallback, useEffect, useState } from 'react';\nimport './App.css';\nimport TodoLists from './components/TodoLists';\nimport FormControl,{useFormControl} from '@material-ui/core/FormControl';\nimport { OutlinedInput } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { css } from '@emotion/css'\nimport SendIcon from '@material-ui/icons/Send';\nimport { v4 } from 'uuid';\n\nconst TODO_APP_STORAGE_KEY = \"TODO_APP\";\n\nfunction App() {\n  const [todoList,setTodoList] = useState([]);\n  const [textInput,setTextInput] = useState(\"\");\n\n  useEffect(() => {\n    if (localStorage.getItem(TODO_APP_STORAGE_KEY)) {\n      setTodoList(JSON.parse(localStorage.getItem(TODO_APP_STORAGE_KEY)));\n    }\n  },[]);\n\n  useEffect(() => {\n    localStorage.setItem(TODO_APP_STORAGE_KEY, JSON.stringify(todoList));\n  }, [todoList]);\n\n  function MyAddButton() {\n    const { filled } = useFormControl() || {};\n    \n    const onAddButtonClick = useCallback((e) => {\n      setTodoList([{ id: v4(), name: textInput, isCompleted: false},...todoList,]);\n      setTextInput(\"\");\n    },[textInput, todoList]);\n    \n    const addButton = React.useMemo(() => {\n      if(filled) {\n        return <Button variant=\"contained\" endIcon={<SendIcon />} color=\"primary\" onClick = {onAddButtonClick}>Send</Button>\n      }\n    }, [filled]);\n    return <div className={css`diplay: flex; width: 20px; height: 36.5px; margin-top: -47px; margin-left: 310px; margin-bottom:20px`}>{addButton}</div>\n  }\n\n  const onTextInputChange = useCallback((e) =>{\n    setTextInput(e.target.value);\n  },[]);\n  return (\n    <div>\n      <h3>Thêm việc cần làm</h3>\n      <FormControl>\n        <OutlinedInput\n          placeholder=\"thêm việc cần làm....\"\n          value={textInput}\n          onChange={onTextInputChange}\n          />\n        <MyAddButton/>\n      </FormControl>\n      <TodoLists todoList={todoList}/>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}